//This code is generated by Jexu.

#include "SimpleListIterator.h"
#include "JexuHelper.h"
#include "JexuJavaException.h"

SimpleListIterator::SimpleListIterator(SimpleList para0) throw () 
{
	JavaVM *jvm;
	JNIEnv *env;
	jmethodID methodID;
	jvm = JNU_GetJavaVM(&env);
	if (jvm == NULL)
	{
		jvm = JNU_CreateJavaVM(&env);
	}
	jclass clazz;

	clazz=env->FindClass("SimpleListIterator");
	methodID=env->GetMethodID(clazz,"<init>","(LSimpleList;)V");
	javaObject=env->NewObject(clazz,methodID, para0.javaObject);

	jthrowable exc = env->ExceptionOccurred();
	if(exc)
	{
		env->ExceptionClear();
		jclass exceptionClass;
		// generic exception
		JexuJavaException e;
		e.javaExceptionObject = static_cast<jthrowable>(env->NewGlobalRef(exc));
		throw e;
	}

}

jboolean SimpleListIterator::hasNext() throw () 
{
	JavaVM *jvm;
	JNIEnv *env;
	jmethodID methodID;
	jvm = JNU_GetJavaVM(&env);
	if (jvm == NULL)
	{
		jvm = JNU_CreateJavaVM(&env);
	}
	jclass clazz;

	clazz=env->FindClass("SimpleListIterator");
	methodID=env->GetMethodID(clazz,"hasNext","()Z");
	jboolean returnThing = env->CallBooleanMethod(javaObject,methodID);

	jthrowable exc = env->ExceptionOccurred();
	if(exc)
	{
		env->ExceptionClear();
		jclass exceptionClass;
		// generic exception
		JexuJavaException e;
		e.javaExceptionObject = static_cast<jthrowable>(env->NewGlobalRef(exc));
		throw e;
	}

	return returnThing;
}

jint SimpleListIterator::next() throw (NoSuchElementException) 
{
	JavaVM *jvm;
	JNIEnv *env;
	jmethodID methodID;
	jvm = JNU_GetJavaVM(&env);
	if (jvm == NULL)
	{
		jvm = JNU_CreateJavaVM(&env);
	}
	jclass clazz;

	clazz=env->FindClass("SimpleListIterator");
	methodID=env->GetMethodID(clazz,"next","()I");
	jint returnThing = env->CallIntMethod(javaObject,methodID);

	jthrowable exc = env->ExceptionOccurred();
	if(exc)
	{
		env->ExceptionClear();
		jclass exceptionClass;
		// check for NoSuchElementException exception
		exceptionClass = env->FindClass("java/util/NoSuchElementException");
		if (exceptionClass && env->IsInstanceOf(exc, exceptionClass))
		{
			NoSuchElementException e;
			e.javaExceptionObject = static_cast<jthrowable>(env->NewGlobalRef(exc));
			throw e;
		}
		// generic exception
		JexuJavaException e;
		e.javaExceptionObject = static_cast<jthrowable>(env->NewGlobalRef(exc));
		throw e;
	}

	return returnThing;
}

